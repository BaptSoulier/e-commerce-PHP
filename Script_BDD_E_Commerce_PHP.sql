
DROP TABLE IF EXISTS profil;
CREATE TABLE profil
(
    ID INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    Admin BOOLEAN DEFAULT FALSE,
    User_Name VARCHAR(255) NOT NULL,
    First_name VARCHAR(255) NOT NULL,
    Last_name VARCHAR(255) NOT NULL,
    Email VARCHAR(255) NOT NULL UNIQUE ,
    E_Verif BOOLEAN DEFAULT FALSE,
    PP varchar(255) NOT NULL ,
    Pw VARCHAR(255) NOT NULL,
    birth_date DATE NULL,
    Phone VARCHAR(20) NULL,
    Loyalty_point INTEGER NOT NULL DEFAULT 0,
    History INTEGER
);


DROP TABLE IF EXISTS adress;
CREATE TABLE adress
(
    ID              INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    UID             INTEGER,
    Country         VARCHAR(255)        NOT NULL,
    Full_name       VARCHAR(255)        NOT NULL,
    Delivery_Phone  VARCHAR(20)         NOT NULL,
    Adress          VARCHAR(255)        NOT NULL,
    Adress_add_info VARCHAR(255)        NULL,
    Postal_code     VARCHAR(20)         NOT NULL,
    City            VARCHAR(255)        NOT NULL,
    Default_address BOOLEAN DEFAULT FALSE
);

DROP TABLE IF EXISTS product;
CREATE TABLE product
(
    ID INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    Category VARCHAR(255) NOT NULL,
    Name VARCHAR(255) NOT NULL,
    Image VARCHAR(255) NOT NULL ,
    Price DECIMAL(10, 2) NOT NULL,
    Description VARCHAR(255) NOT NULL ,
    Rating INTEGER,
    Rest INTEGER NOT NULL
);

DROP TABLE IF EXISTS rating;
CREATE TABLE rating
(
    ID INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    PID INTEGER,
    Rating FLOAT
);

DROP TABLE IF EXISTS code;
CREATE TABLE code
(
  ID INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
  UID INTEGER,
  Code VARCHAR(255),
  Nb_Use INTEGER,
  Expiration_Date DATE NULL,
  Usable BOOLEAN DEFAULT FALSE
);

DROP TABLE IF EXISTS cart;
CREATE TABLE cart
(
    ID INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    UID INTEGER,
    PID INTEGER,
    Quantity INTEGER NOT NULL
);

DROP TABLE IF EXISTS payment;
CREATE TABLE payment
(
    ID INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    UID INTEGER,
    Method VARCHAR(255) NOT NULL,
    BIC VARCHAR(255) NOT NULL,
    IBAN VARCHAR(255) NOT NULL,
    Card_number VARCHAR(255) NOT NULL,
    Name_on_card VARCHAR(255) NOT NULL,
    Expiration_Date VARCHAR(255) NOT NULL,
    CVV VARCHAR(255) NOT NULL
);

DROP TABLE IF EXISTS Wishlist;
CREATE TABLE Wishlist
(
    ID INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    UID INTEGER,
    PID INTEGER
);

DROP TABLE IF EXISTS Order_Hystory;
CREATE TABLE order_history
(
    ID INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    UID INTEGER,
    CID INTEGER,
    Total FLOAT,
    Date DATE NOT NULL
);

ALTER TABLE profil ADD CONSTRAINT fk_Order_History_1 FOREIGN KEY (History) REFERENCES order_history(ID)ON DELETE CASCADE;
ALTER TABLE adress ADD CONSTRAINT fk_User_id_1 FOREIGN KEY (UID) REFERENCES profil(ID)ON DELETE CASCADE;
ALTER TABLE product ADD CONSTRAINT fk_rating_id_1 FOREIGN KEY (Rating) REFERENCES rating(ID) ON DELETE CASCADE;
ALTER TABLE rating ADD CONSTRAINT fk_product_id_1 FOREIGN KEY (PID) REFERENCES product(ID) ON DELETE CASCADE;
ALTER TABLE code ADD CONSTRAINT fk_user_id_2 FOREIGN KEY (UID)REFERENCES profil(ID) ON DELETE CASCADE ;
ALTER TABLE cart ADD CONSTRAINT fk_user_id_3 FOREIGN KEY (UID)REFERENCES profil(ID) ON DELETE CASCADE ;
ALTER TABLE cart ADD CONSTRAINT fk_product_id_2 FOREIGN KEY (PID)REFERENCES product(ID)ON DELETE CASCADE;
ALTER TABLE payment Add CONSTRAINT fk_user_id_4 FOREIGN KEY (UID)REFERENCES profil(ID)ON DELETE CASCADE ;
ALTER TABLE Wishlist ADD CONSTRAINT fk_user_id_5 FOREIGN KEY (UID)REFERENCES profil(ID)ON DELETE CASCADE ;
ALTER TABLE Wishlist ADD CONSTRAINT fk_product_id_5 FOREIGN KEY (PID)REFERENCES product(ID)ON DELETE CASCADE ;
ALTER TABLE order_history ADD CONSTRAINT fk_cart_id_1 FOREIGN KEY (CID)REFERENCES cart(ID)ON DELETE CASCADE;

